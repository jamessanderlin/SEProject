/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.*;
import javax.swing.table.AbstractTableModel;
import java.util.*;

/**
 *
 * @author Mudrekh
 */
public class UserInterface extends javax.swing.JFrame {

    /**
     * Creates new form UserInterfacePrototype
     */
    public UserInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        accountScrollPane = new javax.swing.JScrollPane();
        accountTable = new javax.swing.JTable();
        meterScrollPane = new javax.swing.JScrollPane();
        meterTable = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        save = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        addAccount = new javax.swing.JMenuItem();
        addMeter = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        splitPane.setDividerLocation(435);

        accountTable.setModel(new MapTableModel(Controller.getInstance().getAccounts(), "Account ID", "Account Name"));
        accountTable.setDefaultRenderer(Account.class, new LeftCellRenderer());
        accountTable.setDefaultRenderer(Integer.class, new LeftCellRenderer());
        accountScrollPane.setViewportView(accountTable);

        splitPane.setLeftComponent(accountScrollPane);

        meterTable.setModel(new MeterTableModel(Controller.getInstance().getMeters(), "Meter ID"));
        meterTable.setDefaultRenderer(Integer.class, new LeftCellRenderer());
        meterScrollPane.setViewportView(meterTable);

        splitPane.setRightComponent(meterScrollPane);

        menuFile.setText("File");

        save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        menuFile.add(save);

        menuBar.add(menuFile);

        menuEdit.setText("Edit");

        addAccount.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        addAccount.setText("Add Account");
        addAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAccountActionPerformed(evt);
            }
        });
        menuEdit.add(addAccount);

        addMeter.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        addMeter.setText("Add Meter");
        addMeter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMeterActionPerformed(evt);
            }
        });
        menuEdit.add(addMeter);

        menuBar.add(menuEdit);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAccountActionPerformed
        JTextField firstNameField = new JTextField(10);
        JTextField lastNameField = new JTextField(10);
        JTextField accountIDField = new JTextField(10);
        JTextField line1Field = new JTextField(10);
        JTextField line2Field = new JTextField(10);
        JTextField cityField = new JTextField(10);
        JTextField stateField = new JTextField(10);
        JTextField zipField = new JTextField(10);

        Object[] options = {"SAVE", "CANCEL"};

          JPanel myPanel = new JPanel();
          myPanel.add(new JLabel("First Name"));
          myPanel.add(firstNameField);
          myPanel.add(Box.createHorizontalStrut(15)); // a spacer
          myPanel.add(new JLabel("Last Name"));
          myPanel.add(lastNameField);
          myPanel.add(Box.createHorizontalStrut(15)); // a spacer
          myPanel.add(new JLabel("Account ID"));
          myPanel.add(accountIDField);
          myPanel.add(Box.createHorizontalStrut(15));
          myPanel.add(new JLabel("Address Line 1"));
          myPanel.add(line1Field);
          myPanel.add(Box.createHorizontalStrut(15));
          myPanel.add(new JLabel("Address Line 2"));
          myPanel.add(line2Field);
          myPanel.add(Box.createHorizontalStrut(15));
          myPanel.add(new JLabel("City"));
          myPanel.add(cityField);
          myPanel.add(Box.createHorizontalStrut(15));
          myPanel.add(new JLabel("State"));
          myPanel.add(stateField);
          myPanel.add(Box.createHorizontalStrut(15));
          myPanel.add(new JLabel("Zip"));
          myPanel.add(zipField);

          int result = JOptionPane.showOptionDialog(null, myPanel, 
                   "Enter information for the new residential account", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
          if (result == 0) 
          {
                Account temp = new ResidentialAccount(firstNameField.getText(), 
                                                        lastNameField.getText(), 
                                                        Integer.parseInt(accountIDField.getText()), 0, false,
                                                        new Date(), 
                                                        new Address(line1Field.getText(), line2Field.getText(), cityField.getText(), zipField.getText(), stateField.getText()));
                    Controller.getInstance().addAccount(temp);
                    if(accountTable.getModel() instanceof AbstractTableModel)
                    {
                        ((AbstractTableModel)accountTable.getModel()).fireTableDataChanged();
                    }
                     /* TODO Error checking for duplicate accounts */
                    // refreshAccountJList();
             System.out.println("saved!");
          }
    }//GEN-LAST:event_addAccountActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        Controller.getInstance().save();
    }//GEN-LAST:event_saveActionPerformed

    private void addMeterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMeterActionPerformed
        JTextField meterIDField = new JTextField(5);
        JTextField meterTypeField = new JTextField(12);
        Object[] options = {"SAVE", "CANCEL"};

          JPanel myPanel = new JPanel();
          myPanel.add(new JLabel("Meter ID"));
          myPanel.add(meterIDField);
          myPanel.add(Box.createHorizontalStrut(15)); // a spacer
          myPanel.add(new JLabel("Meter Type"));
          myPanel.add(meterTypeField);


          int result = JOptionPane.showOptionDialog(null, myPanel, 
                   "Enter information for a meter reading", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
          if (result == 0) 
          {
              Meter temp = new Meter(Integer.parseInt(meterIDField.getText()), meterTypeField.getText());
              Controller.getInstance().addMeter(temp);
              if(meterTable.getModel() instanceof AbstractTableModel)
              {
                  ((AbstractTableModel)meterTable.getModel()).fireTableDataChanged();
              }
          }        // TODO add your handling code here:
    }//GEN-LAST:event_addMeterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterfacePrototype.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterfacePrototype.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterfacePrototype.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterfacePrototype.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInterfacePrototype().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane accountScrollPane;
    private javax.swing.JTable accountTable;
    private javax.swing.JMenuItem addAccount;
    private javax.swing.JMenuItem addMeter;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JScrollPane meterScrollPane;
    private javax.swing.JTable meterTable;
    private javax.swing.JMenuItem save;
    private javax.swing.JSplitPane splitPane;
    // End of variables declaration//GEN-END:variables
}
