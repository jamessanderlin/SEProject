/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.*;
import javax.swing.table.AbstractTableModel;
import java.util.*;
import java.awt.Point;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 *
 * @author Mudrekh
 */
public class UserInterface extends javax.swing.JFrame {

    MapTableModel accountTableModel;
    MeterTableModel meterTableModel;
    /**
     * Creates new form UserInterfacePrototype
     */
    public UserInterface() {
        accountTableModel = new MapTableModel(Controller.getInstance().getAccounts(), "Account ID", "Account Name");
        meterTableModel = new MeterTableModel(Controller.getInstance().getMeters(), "Meter ID");
        initComponents();
        
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                    Controller.getInstance().save();
                    System.exit(0);
                }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        accountScrollPane = new javax.swing.JScrollPane();
        accountTable = new javax.swing.JTable();
        meterScrollPane = new javax.swing.JScrollPane();
        meterTable = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        save = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        addResidentialAccount = new javax.swing.JMenuItem();
        addCommercialAccount = new javax.swing.JMenuItem();
        deleteAccount = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        addMeter = new javax.swing.JMenuItem();
        deleteMeter = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Utility Billing Program");

        splitPane.setDividerLocation(435);

        accountTable.setModel(accountTableModel);
        accountTable.setDefaultRenderer(Account.class, new LeftCellRenderer());
        accountTable.setDefaultRenderer(Integer.class, new LeftCellRenderer());
        accountTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                accountTableMouseReleased(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                accountTableMousePressed(evt);
            }
        });
        accountScrollPane.setViewportView(accountTable);

        splitPane.setLeftComponent(accountScrollPane);

        meterTable.setModel(meterTableModel);
        meterTable.setDefaultRenderer(Integer.class, new LeftCellRenderer());
        meterScrollPane.setViewportView(meterTable);

        splitPane.setRightComponent(meterScrollPane);

        menuFile.setText("File");

        save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        menuFile.add(save);

        menuBar.add(menuFile);

        menuEdit.setText("Edit");

        addResidentialAccount.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        addResidentialAccount.setText("Add Residential Account");
        addResidentialAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addResidentialAccountActionPerformed(evt);
            }
        });
        menuEdit.add(addResidentialAccount);

        addCommercialAccount.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        addCommercialAccount.setText("Add Commercial Account");
        addCommercialAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCommercialAccountActionPerformed(evt);
            }
        });
        menuEdit.add(addCommercialAccount);

        deleteAccount.setText("Delete Account");
        deleteAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccountActionPerformed(evt);
            }
        });
        menuEdit.add(deleteAccount);
        menuEdit.add(jSeparator1);

        addMeter.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        addMeter.setText("Add Meter");
        addMeter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMeterActionPerformed(evt);
            }
        });
        menuEdit.add(addMeter);

        deleteMeter.setText("Delete Meter");
        deleteMeter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMeterActionPerformed(evt);
            }
        });
        menuEdit.add(deleteMeter);

        menuBar.add(menuEdit);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addResidentialAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addResidentialAccountActionPerformed
    	Account temp = promptForResidentialAccount();
    	if(temp != null)
    	{
    		Controller.getInstance().addAccount(temp);
    		accountTableModel.fireTableDataChanged();
    	}
    }//GEN-LAST:event_addResidentialAccountActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        Controller.getInstance().save();
    }//GEN-LAST:event_saveActionPerformed

    private void addMeterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMeterActionPerformed
        JTextField meterIDField = new JTextField(5);
        JTextField meterTypeField = new JTextField(12);
        Object[] options = {"SAVE", "CANCEL"};

          JPanel myPanel = new JPanel();
          myPanel.add(new JLabel("Meter ID"));
          myPanel.add(meterIDField);
          myPanel.add(Box.createHorizontalStrut(15)); // a spacer
          myPanel.add(new JLabel("Meter Type"));
          myPanel.add(meterTypeField);


          int result = JOptionPane.showOptionDialog(null, myPanel, 
                   "Enter information for a meter reading", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
          if (result == 0) 
          {
              Meter temp = new Meter(Integer.parseInt(meterIDField.getText()), meterTypeField.getText(), 0.0, new Address("a", "b", "c", "d", "e"));
              Controller.getInstance().addMeter(temp);
              meterTableModel.fireTableDataChanged();
              System.out.println("NEW METER ADDED");
          }
    }//GEN-LAST:event_addMeterActionPerformed

    private void deleteAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccountActionPerformed
        JTextField accountID = new JTextField(12);
        Object[] options = {"DELETE", "CANCEL"};

          JPanel myPanel = new JPanel();
          myPanel.add(new JLabel("Enter Account ID to Delete:"));
          myPanel.add(accountID);

          int result = JOptionPane.showOptionDialog(null, myPanel, 
                   "Delete an account", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
          if (result == 0) 
          {
              int ID = Integer.parseInt(accountID.getText());
              Controller.getInstance().deleteAccount(ID);
              accountTableModel.fireTableDataChanged();
              System.out.println("ACCOUNT DELETED");
          }
    }//GEN-LAST:event_deleteAccountActionPerformed

    private void deleteMeterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMeterActionPerformed
          JTextField meterID = new JTextField(12);
          Object[] options = {"DELETE", "CANCEL"};

          JPanel myPanel = new JPanel();
          myPanel.add(new JLabel("Enter Meter ID to Delete:"));
          myPanel.add(meterID);

          int result = JOptionPane.showOptionDialog(null, myPanel, 
                   "Delete an Meter", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
          if (result == 0) 
          {
              int ID = Integer.parseInt(meterID.getText());
              Controller.getInstance().deleteMeter(ID);
              meterTableModel.fireTableDataChanged();
              System.out.println("METER DELETED");
          }
    }//GEN-LAST:event_deleteMeterActionPerformed

    private void addCommercialAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCommercialAccountActionPerformed
    	Account temp = promptForCommercialAccount();
    	if(temp != null)
    	{
    		Controller.getInstance().addAccount(temp);
    		accountTableModel.fireTableDataChanged();
    	}

    }//GEN-LAST:event_addCommercialAccountActionPerformed

    private void accountTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountTableMousePressed
        if(evt.isPopupTrigger())
        {
            Point p = evt.getPoint();
            int row = accountTable.rowAtPoint(p);
            accountTable.getSelectionModel().setSelectionInterval(row, row);
            System.out.println("Selected");
        }
    }//GEN-LAST:event_accountTableMousePressed

    private void accountTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountTableMouseReleased
        if(evt.isPopupTrigger())
        {
            Point p = evt.getPoint();
            int row = accountTable.rowAtPoint(p);
            accountTable.getSelectionModel().setSelectionInterval(row, row);
            System.out.println("Selected");
        }
    }//GEN-LAST:event_accountTableMouseReleased

    private Account promptForCommercialAccount()
    {
        JTextField companyName = new JTextField(20);
        JTextField accountIDField = new JTextField(10);
        JTextField line1Field = new JTextField(10);
        JTextField line2Field = new JTextField(10);
        JTextField cityField = new JTextField(10);
        JTextField stateField = new JTextField(10);
        JTextField zipField = new JTextField(5);
        
        Object[] options = {"SAVE", "CANCEL"};

		JPanel myPanel = new JPanel();
		myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.Y_AXIS));
		JPanel namePanel = new JPanel();
		namePanel.add(new JLabel("Company Name"));
		namePanel.add(companyName);
		myPanel.add(namePanel);
		JPanel accountIdPanel = new JPanel();
		accountIdPanel.add(new JLabel("Account ID"));
		accountIdPanel.add(accountIDField);
		accountIdPanel.add(Box.createHorizontalStrut(230));
		myPanel.add(accountIdPanel);
		JPanel addressPanel = new JPanel();
		addressPanel.add(new JLabel("Address Line 1"));
		addressPanel.add(line1Field);
		addressPanel.add(Box.createHorizontalStrut(15));
		addressPanel.add(new JLabel("Address Line 2"));
		addressPanel.add(line2Field);
		myPanel.add(addressPanel);
		JPanel cszPanel = new JPanel();
		cszPanel.add(new JLabel("City"));
		cszPanel.add(cityField);
		cszPanel.add(Box.createHorizontalStrut(15));
		cszPanel.add(new JLabel("State"));
		cszPanel.add(stateField);
		cszPanel.add(Box.createHorizontalStrut(15));
		cszPanel.add(new JLabel("Zip"));
		cszPanel.add(zipField);
		myPanel.add(cszPanel);
			  int result = JOptionPane.showOptionDialog(null, myPanel, 
		         "Enter information for the new residential account", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
		if (result == 0) 
		{
			try
			{  
				Account temp = new CommercialAccount(companyName.getText(), 
			                                              Integer.parseInt(accountIDField.getText()), 0, false,
			                                              new Date(), 
			                                              new Address(line1Field.getText(), line2Field.getText(), cityField.getText(), zipField.getText(), stateField.getText()));
			      return temp;
			}
			catch(Exception e)
			{
				return null;
			}
		}
		  else
			  return null;
    }
    
    private Account promptForResidentialAccount()
    {
    	JTextField firstNameField = new JTextField(10);
        JTextField lastNameField = new JTextField(10);
        JTextField accountIDField = new JTextField(10);
        JTextField line1Field = new JTextField(10);
        JTextField line2Field = new JTextField(10);
        JTextField cityField = new JTextField(10);
        JTextField stateField = new JTextField(10);
        JTextField zipField = new JTextField(5);
        
        Object[] options = {"SAVE", "CANCEL"};

        JPanel myPanel = new JPanel();
        myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.Y_AXIS));
        JPanel namePanel = new JPanel();
        namePanel.add(new JLabel("First Name"));
        namePanel.add(firstNameField);
        namePanel.add(Box.createHorizontalStrut(15));
        namePanel.add(new JLabel("Last Name"));
        namePanel.add(lastNameField);
        myPanel.add(namePanel);
        JPanel accountIdPanel = new JPanel();
        accountIdPanel.add(new JLabel("Account ID"));
        accountIdPanel.add(accountIDField);
        accountIdPanel.add(Box.createHorizontalStrut(230));
        myPanel.add(accountIdPanel);
        JPanel addressPanel = new JPanel();
        addressPanel.add(new JLabel("Address Line 1"));
        addressPanel.add(line1Field);
        addressPanel.add(Box.createHorizontalStrut(15));
        addressPanel.add(new JLabel("Address Line 2"));
        addressPanel.add(line2Field);
        myPanel.add(addressPanel);
        JPanel cszPanel = new JPanel();
        cszPanel.add(new JLabel("City"));
        cszPanel.add(cityField);
        cszPanel.add(Box.createHorizontalStrut(15));
        cszPanel.add(new JLabel("State"));
        cszPanel.add(stateField);
        cszPanel.add(Box.createHorizontalStrut(15));
        cszPanel.add(new JLabel("Zip"));
        cszPanel.add(zipField);
        myPanel.add(cszPanel);
        int result = JOptionPane.showOptionDialog(null, myPanel, 
                 "Enter information for the new residential account", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
        
        if (result == 0) 
		{
			try
			{  
				Account temp = new ResidentialAccount(firstNameField.getText(),
														lastNameField.getText(),	
			                                            Integer.parseInt(accountIDField.getText()), 0, false,
			                                            new Date(), 
			                                            new Address(line1Field.getText(), line2Field.getText(), cityField.getText(), zipField.getText(), stateField.getText()));
			      return temp;
			}
			catch(Exception e)
			{
				return null;
			}
		}
		  else
			  return null;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserInterface().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane accountScrollPane;
    private javax.swing.JTable accountTable;
    private javax.swing.JMenuItem addCommercialAccount;
    private javax.swing.JMenuItem addMeter;
    private javax.swing.JMenuItem addResidentialAccount;
    private javax.swing.JMenuItem deleteAccount;
    private javax.swing.JMenuItem deleteMeter;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JScrollPane meterScrollPane;
    private javax.swing.JTable meterTable;
    private javax.swing.JMenuItem save;
    private javax.swing.JSplitPane splitPane;
    // End of variables declaration//GEN-END:variables
}
